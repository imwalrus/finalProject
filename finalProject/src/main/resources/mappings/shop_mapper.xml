<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.finalproject.farm.app.shop.service.impl.ShopMapper">
	<!-- 페이징 -->
	<select id="getCount" resultType="int">
		SELECT COUNT(*)
		FROM PRODUCT
		<where>
			<if test="pro_name != null and pro_name != '' and pro_content != null and pro_content != ''">
				AND UPPER(PRO_NAME) LIKE '%' || UPPER(#{pro_name}) || '%'
				OR UPPER(PRO_CONTENT) LIKE '%' || UPPER(#{pro_content}) || '%'
			</if>
			<if test="pro_category != null and pro_category != ''">
				OR PRO_CATEGORY = #{pro_category}
			</if>
			<if test="pro_price != null and pro_price != ''">
				OR PRO_PRICE &lt;= #{pro_price}
			</if>
		</where>
	</select>
	<!-- 전체 리스트 -->
	<select id="getListShop" parameterType="ShopVO" resultType="ShopVO">
		SELECT B.* FROM (SELECT ROWNUM RN, A.* FROM (
		SELECT PRO_NO
			 , PRO_NAME
			 , TO_CHAR(PRO_PRICE, '999,999,999') PRO_PRICE
			 , PRO_DCOMPANY
			 , TO_CHAR(PRO_DCOST, '999,999,999') PRO_DCOST
			 , PRO_QUANTITY
			 , PRO_CONDITION
			 , PRO_CONTENT
			 , USER_ID
			 , PRO_FILENAME
			 , PRO_CATEGORY
		FROM PRODUCT
		<where>
			<if test="pro_name != null and pro_name != '' and pro_content != null and pro_content != ''">
				AND UPPER(PRO_NAME) LIKE '%' || UPPER(#{pro_name}) || '%'
				OR UPPER(PRO_CONTENT) LIKE '%' || UPPER(#{pro_content}) || '%'
			</if>
			<if test="pro_category != null and pro_category != ''">
				OR PRO_CATEGORY = #{pro_category}
			</if>
			<if test="pro_price != null and pro_price != ''">
				OR PRO_PRICE &lt;= #{pro_price}
			</if>
		</where>
		ORDER BY
		<choose>
			<when test="orderCond == 'popular'">PRO_QUANTITY</when>
			<when test="orderCond == 'cheap'">PRO_PRICE </when>
			<when test="orderCond == 'expensive'">PRO_PRICE DESC</when>
			<otherwise>PRO_NO DESC</otherwise>
		</choose>
		) A) B WHERE RN BETWEEN #{start} AND #{end}
	</select>
	<!-- 전체 수량 -->
	<select id="allCount" resultType="int">
		SELECT COUNT(*)
		  FROM PRODUCT
	</select>
	<!-- 카테고리 수량 -->
	<select id="cateCount" resultType="ShopVO">
		SELECT PRO_CATEGORY, COUNT(*) PRO_COUNT
		  FROM PRODUCT
		 GROUP BY PRO_CATEGORY
         ORDER BY PRO_COUNT DESC
	</select>
	<select id="getProduct" parameterType="ShopVO" resultType="ShopVO">
		SELECT P.PRO_NO
			 , P.PRO_NAME
			 , P.PRO_PRICE
			 , P.PRO_DCOMPANY
			 , P.PRO_DCOST
			 , P.PRO_QUANTITY
			 , P.PRO_CONDITION
			 , P.PRO_CONTENT
			 , P.USER_ID
			 , P.PRO_FILENAME
			 , P.PRO_CATEGORY
			 , U.USER_NAME
		FROM PRODUCT P, USERS U
	   WHERE P.USER_ID = U.USER_ID
	   	 AND P.PRO_NO = #{pro_no}
	</select>
	<!-- 상품 등록 -->
	<insert id="insertProduct" statementType="CALLABLE" parameterType="ShopVO">	
		<selectKey keyProperty="pro_no" resultType="String" order="BEFORE">
			  SELECT NVL(MAX(PRO_NO), 0) + 1 FROM PRODUCT
		</selectKey>
		INSERT INTO PRODUCT (PRO_NO
                     	   , PRO_NAME
                           , PRO_PRICE
                           , PRO_DCOMPANY
                           , PRO_DCOST
                           , PRO_QUANTITY
                           , PRO_CONDITION
                           , PRO_CONTENT
                           , USER_ID
                           , PRO_FILENAME
                           , PRO_CATEGORY)
                      VALUES(#{pro_no}
                           , #{pro_name}
                           , #{pro_price}
                           , #{pro_dcompany}
                           , #{pro_dcost}
                           , #{pro_quantity}
                           , #{pro_condition}
                           , #{pro_content}
                           , #{user_id}
                           , #{pro_filename}
                           , #{pro_category})
	</insert>
	<!-- 상품 수정 -->
	<update id="updateProduct" parameterType="ShopVO">
		UPDATE PRODUCT 
   		<set>
			<if test="pro_name != null and pro_name != ''">
			   PRO_NAME = #{pro_name}
			</if>
			<if test="pro_price != null and pro_price != ''">
			 , PRO_PRICE = #{pro_price}
			</if>
			<if test="pro_dcompany != null and pro_dcompany != ''">
			 , PRO_DCOMPANY = #{pro_dcompany}
			</if>
			<if test="pro_dcost != null and pro_dcost != ''">
			 , PRO_DCOST = #{pro_dcost}
			</if>
			<if test="pro_quantity != null and pro_quantity != ''">
			 , PRO_QUANTITY = #{pro_quantity}
			</if>
			<if test="pro_condition != null and pro_condition != ''">
			 , PRO_CONDITION = #{pro_condition}
			</if>
			<if test="pro_content != null and pro_content != ''">
			 , PRO_CONTENT = #{pro_content}
			</if>
			<if test="user_id != null and user_id != ''">
			 , USER_ID = #{user_id}
			</if>
			<if test="pro_filename != null and pro_filename != ''">
			 , PRO_FILENAME = #{pro_filename}
			</if>
			<if test="pro_category != null and pro_category !=''">
			 , PRO_CATEGORY = #{pro_category}
			</if>
   		</set>
		 WHERE PRO_NO = #{pro_no}
	</update>
	<!-- 상품 삭제 -->
	<delete id="deleteProduct" parameterType="ShopVO">
		 DELETE FROM PRODUCT
		  WHERE PRO_NO = #{pro_no}
	</delete>
	<!-- 장바구니 불러오기 -->
	<select id="getCart" parameterType="CartVO" resultType="CartVO">
		SELECT C.CART_NO
			 , C.USER_ID
			 , C.PRO_NO
			 , P.PRO_NAME
			 , P.PRO_DCOST
			 , P.PRO_CONTENT
			 , P.PRO_FILENAME
			 , C.CART_COUNT, (P.PRO_PRICE * C.CART_COUNT) CART_PRICE
			 , P.USER_ID SELLER
	  	  FROM CART C, PRODUCT P, USERS U
		WHERE C.USER_ID = U.USER_ID AND C.PRO_NO = P.PRO_NO
	 ORDER BY C.CART_NO
	</select>
	<!-- 장바구니 등록 -->
	<insert id="insertCart" statementType="CALLABLE" parameterType="CartVO">
	<selectKey keyProperty="cart_no" resultType="String" order="BEFORE">
		  SELECT NVL(MAX(CART_NO), 0) + 1 FROM CART
	</selectKey>
        INSERT INTO CART(CART_NO
        			   , PRO_NO
        			   , CART_COUNT
        			   , USER_ID)
                 VALUES (#{cart_no}
                 	   , #{pro_no}
                 	   , #{cart_count}
                 	   , #{user_id})
	</insert>
	<!-- 장바구니 수량 변경 -->
	<update id="updateCart" parameterType="CartVO">
		UPDATE CART
		  SET  CART_COUNT = #{cart_count}
		 WHERE PRO_NO = #{pro_no}
	</update>
	<!-- 장바구니 삭제 -->
	<delete id="deleteCart" parameterType="CartVO">
		DELETE FROM CART
		 WHERE CART_NO = #{cart_no}
	</delete>
	<!-- 동일한 상품이있는지 체크 -->
	<select id="cartCheck" parameterType="CartVO" resultType="int">
		SELECT COUNT(*)
		  FROM CART
		 WHERE USER_ID = #{user_id}
	       AND PRO_NO = #{pro_no}
	</select>
</mapper>