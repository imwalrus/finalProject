<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.finalproject.farm.app.user.service.impl.UserMapper">

	<!-- ID 중복체크 -->
	<select id="idCheck" resultType="int" parameterType="UserVO">
		SELECT COUNT(*) FROM USERS 
		WHERE USER_ID=#{user_id}
	</select>
	
	<!-- 이메일 중복체크 -->
	<select id="emailCheck" resultType="int" parameterType="UserVO">
		SELECT COUNT(*) FROM USERS 
		WHERE USER_EMAIL=#{user_email}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="idFind" resultType="UserVO" parameterType="UserVO">
		SELECT NVL(MAX(USER_ID),0) "USER_ID" FROM USERS
				WHERE USER_NAME=  #{user_name} and
					  USER_BIRTH= TO_Date(#{user_birth},'yyyy-mm-dd')  and
				      USER_EMAIL= #{user_email}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="pwFind" resultType="int" parameterType="UserVO">
		SELECT COUNT(*) FROM USERS
				WHERE USER_ID= #{user_id} and
					  USER_BIRTH= TO_DATE(#{user_birth},'yyyy-mm-dd') and
					  USER_EMAIL= #{user_email}
	</select>
	
	<!-- 로그인 체크 -->
	<select id="loginCheck" resultType="UserVO" parameterType="UserVO">
		SELECT 	USER_ID,
				USER_PWD,
				USER_NAME,
				USER_EMAIL,
				USER_ZIP,
				USER_BIRTH,
				USER_PHONE,
				USER_ADR,
				USER_DETAILADR,
				USER_AUTH
		FROM USERS
		WHERE USER_ID=#{user_id}
	</select>
	
	<!-- 회원 단건조회(아이디로 조회) -->
	<select id="getUser" resultType="UserVO" parameterType="UserVO">
		SELECT 	USER_ID,
				USER_PWD,
				USER_NAME,
				USER_EMAIL,
				USER_ZIP,
				USER_BIRTH,
				USER_PHONE,
				USER_ADR,
				USER_DETAILADR,
				USER_AUTH
		FROM USERS
		WHERE USER_ID = #{user_id}
	</select>
	
	<!-- 회원 전체조회 -->
	<select id="getUserList" resultType="UserVO" parameterType="UserVO">
		SELECT 	USER_ID,
				USER_PWD,
				USER_NAME,
				USER_EMAIL,
				USER_ZIP,
				USER_BIRTH,
				USER_PHONE,
				USER_ADR,
				USER_DETAILADR,
				USER_AUTH
		FROM USERS
		ORDER BY USER_ID
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertUser" parameterType="UserVO">
		insert into users (
				USER_ID,
				USER_PWD,
				USER_NAME,
				USER_EMAIL,
				USER_ZIP,
				USER_BIRTH,
				USER_PHONE,
				USER_ADR,
				USER_DETAILADR,
				USER_AUTH
		) values (
				#{user_id},
				#{user_pwd},
				#{user_name},
				#{user_email},
				#{user_zip},
				#{user_birth},
				#{user_phone},
				#{user_adr},
				#{user_detailadr},
				'user'
		)
	</insert>
	
	<!-- 회원 정보수정 -->
	<update id="updateUser" parameterType="UserVO">
		UPDATE USERS
		<set>
			<if test="user_pwd != null and user_pwd !='' "> USER_PWD=#{user_pwd}, </if>
			<if test="user_name !=null and user_name != '' "> USER_NAME=#{user_name}, </if>
			<if test="user_email !=null and user_email != '' ">USER_EMAIL=#{user_email}, </if>
			<if test="user_birth !=null and user_birth != '' ">USER_BIRTH=#{user_birth}, </if>
			<if test="user_phone !=null and user_phone != '' ">USER_PHONE=#{user_phone}, </if>
			<if test="user_zip !=null and user_zip != '' ">USER_ZIP=#{user_zip}, </if>
			<if test="user_adr !=null and user_adr != '' ">USER_ADR=#{user_adr}, </if>
			<if test="user_detailadr !=null and user_detailadr != '' ">USER_DETAILADR=#{user_detailadr} </if>
		</set>

		WHERE USER_ID = #{user_id} 
	</update>
	
	<!-- 회원 농업인 권한 수정 -->
	<update id="updateUserToFarmer" parameterType="UserVO">
		UPDATE USERS
			SET USER_AUTH= 'farmer'
			WHERE USER_ID = #{user_id}
	</update>
	
	<!-- 회원탈퇴 또는 관리자페이지 내에서 회원 삭제 -->
	<delete id="deleteUser" parameterType="UserVO">
		DELETE FROM USERS 
		WHERE USER_ID = #{user_id}
	</delete>
	
	<!-- 회원탈퇴시  -->
	<update id="memberOut" parameterType="UserVO">
		UPDATE USERS
		SET USER_ACTIVE = #{user_active}
		WHERE USER_ID=#{user_id}
	</update>
	
	
</mapper>