<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.finalproject.farm.app.user.service.impl.UserMapper">
	<!-- 페이징 -->
	<select id="getCount" resultType="int">
		SELECT COUNT(*)
		FROM USERS
		<where>
			    USER_ACTIVE = 1
			<if test="user_auth != null and user_auth != ''">
				AND UPPER(USER_AUTH) LIKE '%' || UPPER(#{user_auth}) || '%'
			</if>
			<if test="user_id != null and user_id != ''">
				AND UPPER(USER_ID) LIKE '%' || UPPER(#{user_id}) || '%'
			</if>
			<if test="user_name != null and user_name != ''">
				AND USER_NAME LIKE '%' || #{user_name} || '%'
			</if>
			<if test="user_adr != null and user_adr != ''">
				AND USER_ADR LIKE '%' || #{user_adr} || '%'
			</if>
		</where>
	</select>
	
	<!-- 페이징(Farmer 테이블) -->
	<select id="getCountFarmer" resultType="int">
		SELECT COUNT(*)
		FROM FARMER
	  <where>
        <if test="farmer_check != null and farmer_check != ''">
     	     FARMER_CHECK = #{farmer_check}
       	</if>
      </where>
	</select>

	<!-- ID 중복체크 -->
	<select id="idCheck" resultType="int" parameterType="UserVO">
		SELECT COUNT(*) FROM USERS 
		WHERE USER_ID=#{user_id}
	</select>
	
	<!-- 이메일 중복체크 -->
	<select id="emailCheck" resultType="int" parameterType="UserVO">
		SELECT COUNT(*) FROM USERS 
		WHERE USER_EMAIL=#{user_email}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="idFind" resultType="UserVO" parameterType="UserVO">
		SELECT NVL(MAX(USER_ID),0) "USER_ID" FROM USERS
				WHERE USER_NAME=  #{user_name} and
					  USER_BIRTH= TO_Date(#{user_birth},'yyyy-mm-dd')  and
				      USER_EMAIL= #{user_email}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="pwFind" resultType="int" parameterType="UserVO">
		SELECT COUNT(*) FROM USERS
				WHERE USER_ID= #{user_id} and
					  USER_BIRTH= TO_DATE(#{user_birth},'yyyy-mm-dd') and
					  USER_EMAIL= #{user_email}
	</select>
	
	<!-- 로그인 체크 -->
	<select id="loginCheck" resultType="UserVO" parameterType="UserVO">
		SELECT 	USER_ID,
				USER_PWD,
				USER_NAME,
				USER_EMAIL,
				USER_ZIP,
				USER_BIRTH,
				USER_PHONE,
				USER_ADR,
				USER_DETAILADR,
				USER_AUTH,
				USER_ACTIVE
		FROM USERS
		WHERE USER_ID=#{user_id}
	</select>
	
	<!-- 회원 단건조회(아이디로 조회) -->
	<select id="getUser" resultType="UserVO" parameterType="UserVO">
		SELECT 	USER_ID,
				USER_PWD,
				USER_NAME,
				USER_EMAIL,
				USER_ZIP,
				TO_CHAR(USER_BIRTH,'yyyy-MM-dd') "user_birth",
				USER_PHONE,
				USER_ADR,
				USER_DETAILADR,
				USER_AUTH,
				USER_ACTIVE
		FROM USERS
		WHERE USER_ID = #{user_id}
	</select>
	
	<!-- 회원 전체조회 -->
	<select id="getUserList" resultType="UserVO" parameterType="UserVO">
		SELECT  B.* FROM (SELECT ROWNUM RN, A.* FROM (        
        SELECT 	USER_ID,
				USER_PWD,
				USER_NAME,
				USER_EMAIL,
				USER_ZIP,
				USER_BIRTH,
				USER_PHONE,
				USER_ADR,
				USER_DETAILADR,
                USER_AUTH,
                USER_ACTIVE,
				CASE USER_AUTH WHEN 'farmer' THEN 'O'
                                             ELSE 'X' END AS FARMER_CHECK
		   FROM USERS
     	<where>
           		NOT USER_ACTIVE IN 0
        	AND NOT USER_AUTH IN 'admin'
		<if test="user_auth != null and user_auth !=''">
		    AND USER_AUTH = #{user_auth}
		</if>
		<if test="user_id != null and user_id != ''">
			AND UPPER(USER_ID) LIKE '%' || UPPER(#{user_id}) || '%'
		</if>
		<if test="user_name != null and user_name != ''">
			AND USER_NAME LIKE '%' || #{user_name} || '%'
		</if>
		<if test="user_adr != null and user_adr != ''">
			AND USER_ADR LIKE '%' || #{user_adr} || '%'
		</if>
		</where> 
	  ) A) B WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertUser" parameterType="UserVO">
		insert into users (
				USER_ID,
				USER_PWD,
				USER_NAME,
				USER_EMAIL,
				USER_ZIP,
				USER_BIRTH,
				USER_PHONE,
				USER_ADR,
				USER_DETAILADR,
				USER_AUTH,
				USER_ACTIVE
		) values (
				#{user_id},
				#{user_pwd},
				#{user_name},
				#{user_email},
				#{user_zip},
				TO_Date(#{user_birth},'yyyy-mm-dd')
				#{user_phone},
				#{user_adr},
				#{user_detailadr},
				'user',
				'1'
		)
	</insert>
	
	<!-- 회원 정보수정 -->
	<update id="updateUser" parameterType="UserVO">
		UPDATE USERS
		<set>
			<if test="user_pwd != null and user_pwd !='' "> USER_PWD=#{user_pwd}, </if>
			<if test="user_name !=null and user_name != '' "> USER_NAME=#{user_name}, </if>
			<if test="user_email !=null and user_email != '' ">USER_EMAIL=#{user_email}, </if>
			<if test="user_birth !=null and user_birth != '' ">USER_BIRTH=TO_Date(#{user_birth},'yyyy-mm-dd'), </if>
			<if test="user_phone !=null and user_phone != '' ">USER_PHONE=#{user_phone}, </if>
			<if test="user_zip !=null and user_zip != '' ">USER_ZIP=#{user_zip}, </if>
			<if test="user_adr !=null and user_adr != '' ">USER_ADR=#{user_adr}, </if>
			<if test="user_detailadr !=null and user_detailadr != '' ">USER_DETAILADR=#{user_detailadr} </if>
		</set>
		 WHERE USER_ID = #{user_id} 
	</update>
	
	<!-- 농업인 신청 현황 -->
	<select id="getFarmerList" resultType="UserVO" parameterType="UserVO">
    	SELECT B.* FROM (SELECT ROWNUM RN, A.* FROM (        
		SELECT F.FARMER_NO
			 , F.USER_ID
			 , U.USER_NAME
			 , F.FARMER_DATE
			 , F.FARMER_FILENAME
			 , F.FARMER_CHECK
		  FROM FARMER F, USERS U
		WHERE  F.USER_ID = U.USER_ID
     	  <if test="farmer_check != null and farmer_check != ''">
     	   AND F.FARMER_CHECK = #{farmer_check}
       	  </if>
	    ) A) B WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 농업인 신청 현황(단건) -->
	<select id="getFarmer" resultType="UserVO" parameterType="UserVO">
		SELECT F.FARMER_NO
			 , F.USER_ID
			 , U.USER_NAME
			 , F.FARMER_DATE
			 , F.FARMER_FILENAME
			 , F.FARMER_CHECK
		  FROM FARMER F, USERS U
		 WHERE F.USER_ID = U.USER_ID
		   AND F.USER_ID = #{user_id}
	</select>
	
	<!-- 회원 농업인 권한 수정 -->
	<update id="updateUserToFarmer" parameterType="UserVO">
		UPDATE USERS
		   SET USER_AUTH= #{user_auth}
		 WHERE USER_ID = #{user_id}
	</update>
	
	<!-- 농업인 권한 진행 상태 수정 -->
	<update id="updateFarmerCheck" parameterType="UserVO">
		UPDATE FARMER
		   SET FARMER_CHECK = #{farmer_check}
		 WHERE USER_ID = #{user_id}
	</update>
	
	<!-- 회원탈퇴 또는 관리자페이지 내에서 회원 삭제 -->
	<delete id="deleteUser" parameterType="UserVO">
		DELETE FROM USERS 
		 WHERE USER_ID = #{user_id}
	</delete>
	
	<!-- 회원탈퇴시  -->
	<update id="memberOut" parameterType="UserVO">
		UPDATE USERS
		   SET  USER_PWD = null,
				USER_NAME = null,
				USER_EMAIL = null,
				USER_ZIP = null,
				USER_BIRTH = null,
				USER_PHONE = null,
				USER_ADR = null,
				USER_DETAILADR = null,
				USER_AUTH = null,
				USER_ACTIVE = '0'
		 WHERE USER_ID=#{user_id}
	</update>
	
	
</mapper>